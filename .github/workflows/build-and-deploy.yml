name: Build and Deploy

on:
    [push, pull_request]

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE: ghcr.io/${{ github.repository }}/server
  WEB_IMAGE: ghcr.io/${{ github.repository }}/front
  VERSION: v2.2.0

jobs:
  # Code quality check - runs on all branches
  ruff-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends build-essential libpq-dev

      - name: Install Python dependencies
        run: uv sync
        working-directory: ./server

      - name: Install ruff
        run: uv tool install ruff

      - name: Run ruff check
        run: uv tool run ruff check
        working-directory: ./server

      - name: Run ruff format check
        run: uv tool run ruff format --check
        working-directory: ./server

  # Web frontend lint check
  web-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install
        working-directory: ./web

      - name: Run ESLint
        run: bun run lint
        working-directory: ./web

  # CodeQL security analysis - runs on all branches and outputs to Security tab
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['python', 'javascript']
        include:
          - language: python
            path: './server'
          - language: javascript
            path: './web'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
          config: |
            paths:
              - ${{ matrix.path }}
            paths-ignore:
              - '**/node_modules'
              - '**/dist'
              - '**/build'
              - '**/*.min.js'

      - name: Setup Python for Python analysis
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv for Python dependencies
        if: matrix.language == 'python'
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install Python dependencies with uv
        if: matrix.language == 'python'
        run: |
          uv python install 3.11
          uv sync
        working-directory: ${{ matrix.path }}

      - name: Setup Bun for JavaScript analysis
        if: matrix.language == 'javascript'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install JavaScript dependencies with Bun
        if: matrix.language == 'javascript'
        run: bun install
        working-directory: ${{ matrix.path }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
          upload: true

  # Test builds for non-main branches (PRs)
  test-server-x64:
    if: github.ref != 'refs/heads/main'
    needs: [ruff-check, web-lint, codeql-analysis]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server test image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.SERVER_IMAGE }}:${{ env.VERSION }}-nightly

  test-web-x64:
    if: github.ref != 'refs/heads/main'
    needs: [ruff-check, web-lint, codeql-analysis]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push web test image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.WEB_IMAGE }}:${{ env.VERSION }}-nightly

  # Production builds for main branch
  server-x64:
    if: github.ref == 'refs/heads/main'
    needs: [ruff-check, web-lint, codeql-analysis]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server x64 image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.SERVER_IMAGE }}:${{ env.VERSION }}
            ${{ env.SERVER_IMAGE }}:latest

  web-x64:
    if: github.ref == 'refs/heads/main'
    needs: [ruff-check, web-lint, codeql-analysis]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push web x64 image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.WEB_IMAGE }}:${{ env.VERSION }}
            ${{ env.WEB_IMAGE }}:latest
